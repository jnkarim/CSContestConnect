@{
    ViewData["Title"] = "CSContestConnect — Discover Hackathons & Contests";
    // Keep using _Layout so the navbar shows
}

@section Styles{
    <!-- Swiper CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />
    <!-- Page CSS -->
    <link rel="stylesheet" href="~/css/home.css" asp-append-version="true" />
}

<div class="home-page"><!-- Page-scoped background & grid -->

    <!-- HERO -->
    <section class="csc-section csc-hero">
        <div class="csc-container csc-hero-grid">
            <div class="csc-hero-copy">
                <span class="csc-eyebrow">CSContestConnect</span>
                <h1 class="csc-title">
                    Your calm hub for <span class="csc-gradient">hackathons</span> & <span class="csc-gradient">contests</span>
                </h1>
                <p class="csc-subtitle">
                    Explore <strong>ticketed</strong> events posted by our moderators and
                    <strong>global</strong> challenges like ICPC &amp; NASA Space Apps — online or in-person.
                </p>

                <!-- Presentational search (optional wire-up later) -->
                <form class="csc-search" role="search" aria-label="Quick search">
                    <input type="text" placeholder="Search city, topic, or organizer…" />
                    <button type="submit" formaction="/Events">Search</button>
                </form>

                <div class="csc-chips">
                    <a class="csc-chip" href="#moderator-section">Ticketed</a>
                    <a class="csc-chip" href="#external-section">Global</a>
                    <span class="csc-chip csc-chip--ghost">Online</span>
                    <span class="csc-chip csc-chip--ghost">In-Person</span>
                    <span class="csc-chip csc-chip--ghost">This Week</span>
                </div>
            </div>

            <div class="csc-hero-mosaic" aria-hidden="true">
                <img class="csc-tile csc-tile--big" src="https://images.unsplash.com/photo-1522071820081-009f0129c71c?auto=format&fit=crop&w=2000&q=80" alt="">
                <img class="csc-tile" src="https://images.unsplash.com/photo-1543269865-cbf427effbad?auto=format&fit=crop&w=2000&q=80" alt="">
                <img class="csc-tile" src="https://images.unsplash.com/photo-1518770660439-4636190af475?auto=format&fit=crop&w=2000&q=80" alt="">
            </div>
        </div>
    </section>

    <!-- FEATURE BAND (roomy) -->
    <section class="csc-section" id="why">
        <div class="csc-container">
            <div class="csc-band">
                <p class="csc-feature-eyebrow">Why CSContestConnect</p>
                <h2 class="csc-band-title">
                    From events to resources, we help you <span class="csc-gradient">organize</span>, grow &amp; inspire.
                </h2>
                <p class="csc-band-subtitle">
                    Tools for discovering contests, ticketing moderator events, and keeping members engaged.
                </p>

                <div class="csc-benefit-grid">
                    <!-- 1 -->
                    <article class="csc-benefit-card">
                        <div class="csc-badge-corner"><span class="csc-icon-badge"><i class="bi bi-calendar4-event"></i></span></div>
                        <h3>Seamless Event Management</h3>
                        <p>Plan &amp; publish with scheduling, ticketing, and attendance tracking.</p>
                    </article>

                    <!-- 2 -->
                    <article class="csc-benefit-card">
                        <div class="csc-badge-corner"><span class="csc-icon-badge"><i class="bi bi-patch-check"></i></span></div>
                        <h3>Easy Registration</h3>
                        <p>Fast sign-ups for participants &amp; teams. Auto confirmations &amp; waitlists.</p>
                    </article>

                    <!-- 3 -->
                    <article class="csc-benefit-card">
                        <div class="csc-badge-corner"><span class="csc-icon-badge"><i class="bi bi-people"></i></span></div>
                        <h3>Member Management</h3>
                        <p>Roles, approvals, online/offline filters — stay organized.</p>
                    </article>

                    <!-- 4 -->
                    <article class="csc-benefit-card">
                        <div class="csc-badge-corner"><span class="csc-icon-badge"><i class="bi bi-bar-chart"></i></span></div>
                        <h3>Insightful Analytics</h3>
                        <p>See trends by date, city, and topic with clean reports.</p>
                    </article>

                    <!-- 5 -->
                    <article class="csc-benefit-card">
                        <div class="csc-badge-corner"><span class="csc-icon-badge"><i class="bi bi-chat-dots"></i></span></div>
                        <h3>Communication Hub</h3>
                        <p>Announcements &amp; resources keep everyone aligned in real time.</p>
                    </article>

                    <!-- 6 -->
                    <article class="csc-benefit-card">
                        <div class="csc-badge-corner"><span class="csc-icon-badge"><i class="bi bi-stars"></i></span></div>
                        <h3>Quick Resource Booking</h3>
                        <p>Reserve labs, auditoriums &amp; equipment in seconds.</p>
                    </article>
                </div>
            </div>
        </div>
    </section>

    <!-- MODERATOR-POSTED (TICKETED) -->
    <section id="moderator-section" class="csc-section csc-anchor">
        <div class="csc-container csc-section-header">
            <div>
                <h2 class="csc-section-title">Moderator-Posted Contests <span class="csc-pill">Ticketed</span></h2>
                <p class="csc-section-subtitle">Register and grab tickets directly on CSContestConnect.</p>
            </div>
        </div>

        <div class="csc-container">
            <div class="swiper csc-carousel" id="localSwiper" aria-label="Moderator posted events">
                <div class="swiper-wrapper">
                    <!-- slide 1 -->
                    <!-- ... keep your existing slides exactly as you had ... -->
                </div>

                <!-- Controls -->
                <div class="csc-swiper-controls">
                    <div class="swiper-button-prev" aria-label="Previous moderator events"></div>
                    <div class="swiper-pagination"></div>
                    <div class="swiper-button-next" aria-label="Next moderator events"></div>
                </div>
            </div>
        </div>
    </section>

    <!-- GLOBAL / EXTERNAL -->
    <section id="external-section" class="csc-section csc-anchor">
        <div class="csc-container csc-section-header">
            <div>
                <h2 class="csc-section-title">Global Contests &amp; Challenges <span class="csc-pill csc-pill--secondary">External</span></h2>
                <p class="csc-section-subtitle">We link you to their official pages. No tickets here.</p>
            </div>
        </div>

        <div class="csc-container">
            <div class="swiper csc-carousel" id="globalSwiper" aria-label="External contests">
                <div class="swiper-wrapper">
                    <!-- slides (NASA, ICPC, Kaggle, MLH) — keep as you had -->
                </div>

                <!-- Controls -->
                <div class="csc-swiper-controls">
                    <div class="swiper-button-prev" aria-label="Previous global events"></div>
                    <div class="swiper-pagination"></div>
                    <div class="swiper-button-next" aria-label="Next global events"></div>
                </div>
            </div>
        </div>
    </section>

    <!-- CALLOUT -->
    <section class="csc-section csc-callout">
      <div class="csc-container csc-callout-inner">
        <div class="csc-callout-text">
          <h3>🚀 Host Your Own Contest</h3>
          <p>
            Are you a <strong>moderator</strong> with a great idea for a hackathon or coding challenge?  
            Launch it on <span class="csc-gradient">CSContestConnect</span> and get access to:
          </p>
          <ul class="csc-callout-list">
            <li>🎟️ Built-in ticketing & easy participant management</li>
            <li>📊 Admin approval & analytics dashboard</li>
            <li>🌍 Reach developers, students & innovators globally</li>
          </ul>
        </div>
        <a class="csc-btn csc-btn--primary" href="/Events/Create">Start Posting</a>
      </div>
    </section>

    <!-- Floating AI Chatbox (HTML lives in the page, not inside the Scripts section) -->
    <div id="aiChatbox">
        <div id="aiChatHeader">
            Chat with AI
            <span id="aiCloseBtn">&times;</span>
        </div>
        <div id="aiChatBody">
            <div id="aiMessages"></div>
            <div id="aiInputArea">
                <input id="aiInput" type="text" placeholder="Type a message..." />
                <button id="aiSendBtn">Send</button>
            </div>
        </div>
    </div>

</div><!-- /.home-page -->

@section Scripts{
    <!-- Swiper JS -->
    <script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
    <script>
        // Initialize all carousels and wire their local controls
        document.querySelectorAll('.csc-carousel').forEach((el) => {
            const controls = el.closest('.csc-container').querySelector('.csc-swiper-controls');
            new Swiper(el, {
                slidesPerView: 1.08,
                spaceBetween: 18,
                centeredSlides: false,
                breakpoints: {
                    640:  { slidesPerView: 1.4, spaceBetween: 20 },
                    768:  { slidesPerView: 2.0, spaceBetween: 22 },
                    1024: { slidesPerView: 4.0, spaceBetween: 24 },
                    1400: { slidesPerView: 3.0, spaceBetween: 28 }
                },
                navigation: {
                    nextEl: controls?.querySelector('.swiper-button-next'),
                    prevEl: controls?.querySelector('.swiper-button-prev')
                },
                navigation: controls ? {
                    nextEl: controls.querySelector('.swiper-button-next'),
                    prevEl: controls.querySelector('.swiper-button-prev')
                } : undefined,
                pagination: controls ? {
                    el: controls.querySelector('.swiper-pagination'),
                    clickable: true
                } : undefined
            });
        });
    </script>

    <!-- Floating AI Chatbox -->
<div id="aiChatbox">
    <div id="aiChatHeader">
        Chat with AI
        <span id="aiCloseBtn">&times;</span>
    </div>
    <div id="aiChatBody">
        <div id="aiMessages"></div>
        <div id="aiInputArea">
            <input id="aiInput" type="text" placeholder="Type a message..." />
            <button id="aiSendBtn">Send</button>
        </div>
    </div>
</div>
    <script>
        const chatHeader = document.getElementById('aiChatHeader');
        const chatBody = document.getElementById('aiChatBody');
        const chatMessages = document.getElementById('aiMessages');
        const chatInput = document.getElementById('aiInput');
        const chatSendBtn = document.getElementById('aiSendBtn');
        const chatCloseBtn = document.getElementById('aiCloseBtn');

        chatHeader.addEventListener('click', (e) => {
            if(e.target !== chatCloseBtn){
                chatBody.classList.toggle('open');
            }
        });

        // Close chat
        chatCloseBtn.addEventListener('click', () => {
            chatBody.classList.remove('open');
        });

        function appendMessage(message, isUser) {
            const div = document.createElement('div');
            div.className = isUser ? 'message user' : 'message ai';
            chatMessages.appendChild(div);
            chatMessages.scrollTop = chatMessages.scrollHeight;

            if (!isUser) {
                let i = 0;
                const interval = setInterval(() => {
                    div.textContent = message.substring(0, i+1);
                    i++;
                    chatMessages.scrollTop = chatMessages.scrollHeight;
                    if(i >= message.length) clearInterval(interval);
                }, 25);
            } else {
                div.textContent = message;
            }
        }

        async function sendMessage() {
            const message = chatInput.value.trim();
            if (!message) return;
            appendMessage(message, true);
            chatInput.value = '';

            try {
                const response = await fetch('/api/chat/ask', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ message })
                });
                const data = await response.json();
                if (data.reply) appendMessage(data.reply, false);
                else appendMessage('Sorry, no response from AI.', false);
            } catch (err) {
                appendMessage('Error connecting to AI.', false);
                console.error(err);
            }
        }

        chatSendBtn.addEventListener('click', sendMessage);
        chatInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter') sendMessage();
        });
    </script>
}
